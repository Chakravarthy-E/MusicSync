import axios, { CreateAxiosDefaults } from "axios";
import { getFromLocalStorage, Keys } from "./storage";

const client = axios.create({
  baseURL: process.env.NEXT_PUBLIC_BASEURL,
});

const baseURL = process.env.NEXT_PUBLIC_BASEURL;

type headers = CreateAxiosDefaults<any>["headers"];

export const getClient = async (headers?: headers) => {
  const token = await getFromLocalStorage(Keys.AUTH_TOKEN);

  if (!token) return axios.create({ baseURL });

  const defaultHeaders = {
    Authorization: "Bearer " + token,
    ...headers,
  };

  return axios.create({ baseURL, headers: defaultHeaders });
};

export default client;

export const apiList = {
  createUser: "/auth/create",
  verifyEmail: "/auth/verify-email",
  reVerifyEmail: "/auth/re-verify-email",
  forgetPassword: "/auth/forget-password",
  verifyPasswordResetToken: "/auth/verify-pass-reset-token",
  updatePassword: "/auth/update-password",
  signIn: "/auth/sign-in",
  isAuth: "/auth/is-auth",
  updateProfile: "/auth/update-profile",
  logout: "/auth/log-out",
  addAudio: "/audio/create",
  getAudio: "/audio/:audioId",
  latestAudios: "/audio/latest",
  addToFavorites: "/favorite",
  getFavorites: "/favorite",
  getIsFavorite: "/is-fav",
  postHistory: "/history",
  deleteHistory: "/history",
  getHistory: "/history",
  recentlyPlayed: "/history/recently-played",
  createPlaylist: "/playlist/create",
  editPlaylist: "/playlist",
  deletePlaylist: "/playlist",
  getPlaylistByProfile: "/playlist/by-profile",
  getPlaylistById: "/playlist/:playlistId",
  updateFollower: "/profile/update-follower/:profileId",
  getUploads: "/profile/uploads",
  getPublicUploads: "/profile/uploads/:profileId",
  getPublicProfile: "/profile/info/:profileId",
  getPublicPlaylists: "/profile/playlist/:profileId",
  getAutoGeneratedPlaylists: "/profile/auto-generated-playlist",
  getRecommendByProfile: "/profile/recommended",
  getFollowersProfile: "/profile/followers",
  getFollowersProfilePublic: "/profile/followers/:profileId",
  getFollowingsProfile: "/profile/followings",
  getPlaylistAudios: "/profile/playlist-audios/:playlistId",
  getPrivatePlaylistAudios: "/profile//private-playlist-audios/:playlistId",
  getIsFollowing: "/profile//is-following/:profileId",
};
